---
apiVersion: v1
kind: ConfigMap
metadata:
  name: rest-categories-config
  labels:
    app: rest-categories
    application: categories-service
    system: quarkus-magazenn
data:
  quarkus.hibernate-orm.schema-management.strategy: validate
  quarkus.hibernate-orm.sql-load-script: no-file
  quarkus.datasource.reactive.url: postgresql://categories-db:5432/categories_database
  quarkus.otel.exporter.otlp.traces.endpoint: http://otel-collector:4317
---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: rest-categories-config-creds
  labels:
    app: rest-categories
    application: categories-service
    system: quarkus-magazenn
data:
  quarkus.datasource.username: c3VwZXJtYW4=
  quarkus.datasource.password: c3VwZXJtYW4=
---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: categories-db-config
  labels:
    app: categories-db
    application: categories-service
    system: quarkus-magazenn
data:
  POSTGRESQL_DATABASE: aGVyb2VzX2RhdGFiYXNl
  POSTGRESQL_USERNAME: c3VwZXJtYW4=
  POSTGRESQL_PASSWORD: c3VwZXJtYW4=
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: categories-db-init
  labels:
    app: categories-db
    application: categories-service
    system: quarkus-magazenn
data:
  get-data.sh: |-
    #!/bin/bash
    
    curl https://raw.githubusercontent.com/quarkusio/quarkus-magazenn/main/rest-categories/deploy/db-init/initialize-tables.sql --output /docker-entrypoint-initdb.d/1-init-tables.sql
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: categories-db
    application: categories-service
    system: quarkus-magazenn
    app.kubernetes.io/part-of: categories-service
    app.openshift.io/runtime: postgresql
  name: categories-db
spec:
  replicas: 1
  selector:
    matchLabels:
      name: categories-db
  template:
    metadata:
      labels:
        name: categories-db
        application: categories-service
        system: quarkus-magazenn
    spec:
      initContainers:
        - name: get-data
          image: registry.access.redhat.com/ubi8-minimal:8.6
          workingDir: /docker-entrypoint-preinitdb.d
          command:
            - 'sh'
            - 'get-data.sh'
          volumeMounts:
            - name: categories-db-init
              mountPath: /docker-entrypoint-preinitdb.d
            - name: categories-db-init-data
              mountPath: /docker-entrypoint-initdb.d
      containers:
        - image: bitnami/postgresql:16
          name: categories-db
          ports:
            - containerPort: 5432
          envFrom:
            - secretRef:
                name: categories-db-config
          volumeMounts:
            - name: categories-db-data
              mountPath: /bitnami/postgresql
            - name: categories-db-init-data
              mountPath: /docker-entrypoint-initdb.d
          resources:
            limits:
              memory: 128Mi
            requests:
              memory: 32Mi
      volumes:
        - name: categories-db-data
          emptyDir: {}
        - name: categories-db-init-data
          emptyDir: {}
        - name: categories-db-init
          configMap:
            name: categories-db-init
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: categories-db
    application: categories-service
    system: quarkus-magazenn
  name: categories-db
spec:
  ports:
    - port: 5432
      protocol: TCP
      targetPort: 5432
  selector:
    name: categories-db
  type: ClusterIP
